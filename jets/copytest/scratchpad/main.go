package main

import (
	"fmt"
	"reflect"
	"strconv"
	"time"
	"encoding/json"
)

// Just to try some stuff

func main2() {
	arrI := []interface{}{
		5,
		"something",
		[]byte("something as bytes"),
		[7]byte([]byte("7 bytes")),
		22.5,
		nil,
		time.Now().UTC(),
	}
	values := make([]string, len(arrI))
	for i := range arrI {
		if arrI[i] == nil {
			values[i] = ""	
		} else {
			fmt.Println("Got type:", reflect.TypeOf(arrI[i]), reflect.TypeOf(arrI[i]).Kind())
			switch vv := arrI[i].(type) {
			case int:
				values[i] = strconv.Itoa(vv)
			case string:
				values[i] = vv
			case []byte:
				values[i] = string(vv)
			default:
				v := reflect.ValueOf(arrI[i])
				t := reflect.TypeOf(arrI[i])
				if t.Kind() == reflect.Array {
					values[i] = fmt.Sprintf("Got a fixed array of size %v", t.Len())
					fmt.Println(values[i])
					bb := make([]byte, t.Len())
					for i := range bb {
						bb[i] = byte(v.Index(i).Interface().(uint8))
					}
					values[i] = string(bb)
				} else {
					values[i] = fmt.Sprintf("%v", arrI[i])
				}
			}
		}
	}
	fmt.Println("Here's what we have:")
	for i := range values {
		fmt.Println("  ",values[i])
	}
}

func main() {

keepers := map[string]bool{
	"dw_member_id": true,
	"dw_rawfilename": true,
	"employee_id": true,
	"ins_emp_group_id": true,
	"mbr_dob": true,
	"mbr_first_name": true,
	"mbr_gender": true,
	"mbr_id": true,
	"mbr_last_name": true,
	"mbr_relationship_class": true,
	"mbr_relationship_code": true,
	"prv_in_network_flag": true,
	"rev_allowed_amt": true,
	"rev_billed_amt": true,
	"rev_claim_id": true,
	"rev_coinsurance_amt": true,
	"rev_copay_amt": true,
	"rev_deductible_amt": true,
	"rev_not_covered_amt": true,
	"rev_paid_amt": true,
	"rev_paid_date": true,
	"svc_cpt_code": true,
	"svc_diag_1_code": true,
	"svc_hcpcs_code": true,
	"svc_pos_code": true,
	"svc_rev_code": true,
	"svc_service_frm_date": true,
	"svc_service_to_date": true,
}
fullHeaders := []string{"dw_record_id",
"dw_member_id",
"integer_member_id",
"dw_member_match_status",
"dw_file_type",
"inc_flag",
"dw_benplan_div_id",
"rev_claim_id",
"integer_claim_number",
"rev_claim_line_id",
"rev_claim_type",
"claim_in_network_indicator",
"claim_participating_provider_indicator",
"rev_claim_type_flag",
"ins_plan_type_code",
"ins_plan_type_desc",
"ins_carrier_id",
"ins_carrier_name",
"ins_coverage_type_code",
"ins_coverage_type_desc",
"ins_coverage_class",
"ins_plan_id",
"ins_plan_desc",
"ins_plan_class",
"ins_emp_group_id",
"ins_emp_group_name",
"ins_division_id",
"ins_division_name",
"ins_industry_sic",
"ins_industry_sic_desc",
"ins_cobra_code",
"ins_cobra_desc",
"mbr_id",
"mbr_seq",
"employee_id",
"integer_employee_id",
"mbr_ssn",
"mbr_first_name",
"mbr_middle_name",
"mbr_last_name",
"mbr_orig_first_name",
"mbr_orig_last_name",
"mbr_orig_dob",
"mbr_gender",
"mbr_dob",
"mbr_street_1",
"mbr_street_2",
"mbr_city",
"mbr_county",
"mbr_state",
"mbr_zip",
"mbr_phone",
"mbr_region_code",
"mbr_region_name",
"mbr_msa",
"mbr_relationship_code",
"mbr_relationship_desc",
"mbr_relationship_class",
"mbr_age_range",
"mbr_work_location",
"prv_service_provider_id",
"integer_provider_id",
"prv_npi",
"prv_tin",
"prv_type_code",
"prv_type_desc",
"prv_first_name",
"prv_middle_name",
"prv_last_name",
"prv_servicing_name",
"prv_gender",
"prv_native_language",
"prv_network_code",
"prv_network_name",
"prv_phone",
"prv_speciality_1_code",
"prv_Specialty_1_desc",
"prv_speciality_2_code",
"prv_Specialty_2_desc",
"prv_speciality_3_code",
"prv_Specialty_3_desc",
"prv_street_1",
"prv_street_2",
"prv_city",
"prv_county",
"prv_state",
"prv_zip",
"prv_msa",
"prv_in_network_flag",
"prv_pcp_flag",
"prv_pcp_id",
"prv_pcp_npi",
"prv_site_id",
"prv_pcp_first_name",
"prv_pcp_middle_name",
"prv_pcp_last_name",
"prv_pcp_state",
"prv_taxonomy_code_pcp",
"prv_taxonomy_desc_pcp",
"prv_taxonomy_subdesc_pcp",
"prv_taxonomy_specialization_pcp",
"prv_ordering_id",
"prv_ordering_npi",
"prv_ordering_last_name",
"prv_ordering_middle_name",
"prv_ordering_first_name",
"prv_ordering_name",
"prv_ordering_state",
"prv_ordering_zip",
"prv_billing_name",
"prv_billing_state",
"prv_attending_name",
"prv_attending_state",
"atndg_prvdr_npi_num",
"svc_pos_code",
"svc_pos_desc",
"svc_diag_type",
"svc_admitting_diag_code",
"svc_admitting_diag_desc",
"svc_diag_1_code",
"svc_diag_1_desc",
"svc_diag_2_code",
"svc_diag_2_desc",
"svc_diag_3_code",
"svc_diag_3_desc",
"svc_diag_4_code",
"svc_diag_4_desc",
"svc_diag_5_code",
"svc_diag_5_desc",
"svc_diag_6_code",
"svc_diag_6_desc",
"svc_diag_7_code",
"svc_diag_7_desc",
"svc_diag_8_code",
"svc_diag_8_desc",
"svc_diag_9_code",
"svc_diag_9_desc",
"svc_diag_10_code",
"svc_diag_10_desc",
"svc_diag_11_code",
"svc_diag_11_desc",
"svc_diag_12_code",
"svc_diag_12_desc",
"svc_diag_13_code",
"svc_diag_13_desc",
"svc_diag_14_code",
"svc_diag_14_desc",
"svc_diag_15_code",
"svc_diag_15_desc",
"svc_diag_16_code",
"svc_diag_16_desc",
"svc_diag_17_code",
"svc_diag_17_desc",
"svc_diag_18_code",
"svc_diag_18_desc",
"svc_diag_19_code",
"svc_diag_19_desc",
"svc_diag_20_code",
"svc_diag_20_desc",
"svc_diag_21_code",
"svc_diag_21_desc",
"svc_diag_22_code",
"svc_diag_22_desc",
"svc_diag_23_code",
"svc_diag_23_desc",
"svc_diag_24_code",
"svc_diag_24_desc",
"svc_diag_25_code",
"svc_diag_25_desc",
"svc_procedure_type",
"svc_procedure_code",
"svc_procedure_desc",
"svc_rev_code",
"svc_rev_desc",
"svc_cpt_code",
"svc_cpt_desc",
"svc_cpt_long_desc",
"svc_icd_proc_1_code",
"svc_icd_proc_1_desc",
"svc_icd_proc_2_code",
"svc_icd_proc_2_desc",
"svc_drg_type_code",
"svc_drg_type_Desc",
"svc_drg_code",
"svc_drg_desc",
"svc_hcpcs_code",
"svc_hcpcs_desc",
"svc_hcpcs_long_desc",
"svc_hipps_code",
"svc_hipps_desc",
"svc_modifier_code",
"svc_modifier_desc",
"svc_modifier_2_code",
"svc_modifier_2_desc",
"svc_modifier_3_code",
"svc_modifier_3_desc",
"svc_tos_code",
"svc_tos_desc",
"svc_discharge_code",
"svc_discharge_desc",
"svc_service_qty",
"svc_ip_days",
"svc_covered_days",
"svc_admit_type",
"svc_service_frm_date",
"svc_service_to_date",
"rev_adjudication_date",
"rev_paid_date",
"svc_diag_1_default_ccsr_category_ip",
"svc_diag_1_default_ccsr_category_ip_description",
"svc_diag_1_default_ccsr_category_op",
"svc_diag_1_default_ccsr_category_op_description",
"svc_icd_proc_1_ccs_category",
"svc_icd_proc_1_ccs_category_description",
"svc_icd_proc_1_ccs_clinical_domain",
"svc_icd_proc_2_ccs_category",
"svc_icd_proc_2_ccs_category_description",
"svc_icd_proc_2_ccs_clinical_domain",
"svc_benefit_code",
"svc_benefit_desc",
"rev_allowed_amt",
"rev_billed_amt",
"rev_cob_paid_amt",
"rev_coinsurance_amt",
"rev_copay_amt",
"rev_coverage_charge_amt",
"rev_deductible_amt",
"rev_not_covered_amt",
"rev_other_savings",
"rev_ppo_savings",
"rev_paid_amt",
"rev_pay_type",
"rev_check_num",
"svc_pre_authorization1",
"svc_pre_authorization2",
"rev_adjudication_code",
"rev_adjudication_desc",
"rev_adjudication_class",
"mbr_MRN",
"mbr_HICN",
"rev_bill_type_code",
"rev_bill_type_desc",
"rev_eob_adjustment_code",
"rev_eob_adjustment_desc",
"prv_domestic_flag",
"prv_taxonomy_code1",
"prv_taxonomy_desc1",
"prv_taxonomy_subdesc1",
"prv_taxonomy_specialization_1",
"prv_taxonomy_code2",
"prv_taxonomy_desc2",
"prv_taxonomy_subdesc2",
"prv_taxonomy_specialization_2",
"prv_taxonomy_code_ordering",
"prv_taxonomy_desc_ordering",
"prv_taxonomy_subdesc_ordering",
"prv_taxonomy_specialization_ordering",
"prv_taxonomy_code_attending",
"prv_taxonomy_desc_attending",
"prv_taxonomy_subdesc_attending",
"prv_taxonomy_specialization_attending",
"prv_type_category_servicing",
"prv_type_category_billing",
"prv_type_category_ordering",
"prv_type_category_attending",
"rev_orig_claim_id",
"network_status",
"payer_id",
"clm_bill_npi",
"clm_line_num",
"bene_attrib",
"fac_prvdr_oscar_num",
"ed_flag",
"record_type",
"referral_type",
"crg",
"drg",
"soi",
"Medical_EAPG",
"Primary_EAPG",
"clinical_relationship",
"clinical_relationship_reason",
"EAPG_DRG",
"EAPG_DRG_Description",
"ER_Visit_Flag",
"Potentially_Preventable_Group",
"Potentially_Preventable_Reason_Code",
"Potentially_Preventable_Reason_Description",
"Preventable_Status",
"Potentially_Preventable_Status",
"Potentially_Preventable_Spend",
"reserved_field_1",
"reserved_field_2",
"reserved_field_3",
"dw_med_duplicate_claim_flag_2",
"reserved_field_4",
"reserved_field_5",
"reserved_field_6",
"reserved_field_7",
"reserved_field_8",
"reserved_field_9",
"reserved_field_10",
"dw_vendor_name",
"dw_admrule",
"svc_procedure_grouper",
"proc1_grouper_desc",
"proc1_subgrouper_id",
"svc_procedure_sub_grouper",
"Proc2_grouper_id",
"Proc2_grouper_desc",
"Proc2_Subgrouper_id",
"Proc2_Subgrouper_desc",
"Proc3_grouper_id",
"Proc3_grouper_desc",
"Proc3_Subgrouper_id",
"Proc3_Subgrouper_desc",
"Proc4_grouper_id",
"Proc4_grouper_desc",
"Proc4_Subgrouper_id",
"Proc4_Subgrouper_desc",
"Proc5_grouper_id",
"Proc5_grouper_desc",
"Proc5_Subgrouper_id",
"Proc5_Subgrouper_desc",
"Proc6_grouper_id",
"Proc6_grouper_desc",
"Proc6_Subgrouper_id",
"Proc6_Subgrouper_desc",
"Proc7_grouper_id",
"Proc7_grouper_desc",
"Proc7_Subgrouper_id",
"Proc7_Subgrouper_desc",
"admitting_diag_grouper_id",
"admitting_diag_grouper_desc",
"admitting_diag_supergrouper_id",
"admitting_diag_supergrouper_desc",
"diag1_grouper_id",
"diag1_grouper_desc",
"diag1_supergrouper_id",
"diag1_supergrouper_desc",
"diag2_grouper_id",
"diag2_grouper_desc",
"diag2_supergrouper_id",
"diag2_supergrouper_desc",
"diag3_grouper_id",
"diag3_grouper_desc",
"diag3_supergrouper_id",
"diag3_supergrouper_desc",
"diag4_grouper_id",
"diag4_grouper_desc",
"diag4_supergrouper_id",
"diag4_supergrouper_desc",
"diag5_grouper_id",
"diag5_grouper_desc",
"diag5_supergrouper_id",
"diag5_supergrouper_desc",
"diag6_grouper_id",
"diag6_grouper_desc",
"diag6_supergrouper_id",
"diag6_supergrouper_desc",
"diag7_grouper_id",
"diag7_grouper_desc",
"diag7_supergrouper_id",
"diag7_supergrouper_desc",
"diag8_grouper_id",
"diag8_grouper_desc",
"diag8_supergrouper_id",
"diag8_supergrouper_desc",
"diag9_grouper_id",
"diag9_grouper_desc",
"diag9_supergrouper_id",
"diag9_supergrouper_desc",
"proc1_betos",
"proc1_betos_grouper",
"proc1_betos_sub_grouper",
"proc2_betos",
"proc2_betos_grouper",
"proc2_betos_sub_grouper",
"proc3_betos",
"proc3_betos_grouper",
"proc3_betos_sub_grouper",
"proc4_betos",
"proc4_betos_grouper",
"proc4_betos_sub_grouper",
"proc5_betos",
"proc5_betos_grouper",
"proc5_betos_sub_grouper",
"proc6_betos",
"proc6_betos_grouper",
"proc6_betos_sub_grouper",
"proc7_betos",
"proc7_betos_grouper",
"proc7_betos_sub_grouper",
"dw_rawfilename",
"dw_recievedmonth",
"stage_version",
"dw_client_id"}
outHeaders := make([]string, len(fullHeaders))
for i, h := range fullHeaders {
	if keepers[h] {
		outHeaders[i] = h
	} else {
		outHeaders[i] = "Filler"
	}
}
fmt.Println("The headers are now")
s, _ := json.Marshal(outHeaders)
fmt.Println(string(s))
}